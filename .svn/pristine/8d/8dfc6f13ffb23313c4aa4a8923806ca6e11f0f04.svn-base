<template>
  <div class="content">
    <div class="main">
      <img class="personPic" :src="imageServerUrl + picUrl">
      <p class="logo">{{title}}</p>
      <h2 class="title">{{buyBtn}}</h2>
      <div :class="[ allow ? '' : 'nouse','buyBtn']" @click="userNow">
        {{masseg}}
      </div>
      <!-- <div class="logoPic"></div> -->
      <div class="tips">
        <h2>有效日期</h2>
        <p>{{startDate}} 至 {{endDate}}</p>
      </div>
      <div class="tips">
        <h2>使用说明</h2>
        <div v-html="description"></div>
      </div>
    </div>
    <!-- 核销二维码 -->
    <div class="popBox" v-show="ma">
      <div class="ma">
        <div class="maimg" id="qrcode"></div>
        <p class="matext">请出示给店员使用</p>
        <div class="mabtn" @click="mahidde"></div>
      </div>
    </div>
    <!-- 提示弹框 -->
    <div class="masuccess" v-show="tips">{{masseg}}</div>
  </div>
</template>
<script>
import * as config from '@/lib/config'
import '@/assets/js/jquery.qrcode.min'
import {
  formatDate,
  userData,
  EnumConfigType,
  ShareInfo,
  getJsSign,
  wxconfig
} from '@/lib/tools';

export default {
  data() {
    return {
      cardOrderId: '',
      imageServerUrl: config.imageServerUrl,
      erweima: config.cdnUrl,
      money: 0,
      picUrl: '',
      logo: '',
      title: '',
      buyBtn: '',
      startDate: '',
      endDate: '',
      description: '',
      masseg: '',
      ma: false,
      link: '',
      allow: false,
      orderStatus: 0,
      localStorageList: {},
      tips: ''
    }
  },

  created() {
    console.log(userData.cardOrderId);
    //拒绝分享
    getJsSign(function(sign) {
      wxconfig(sign);
    })
    wx.ready(function() {
      // alert(1111);
      wx.hideAllNonBaseMenuItem();

    });

    var self = this;
    //接口传参的数据需要存储在本地缓存
    // if (this.$route.params.sid) {
    //   this.localStorageList.cardOrderId = this.$route.params.sid;
    //   localStorage.setItem('cardOrder', JSON.stringify(this.localStorageList))
    // }
    // this.localStorageList = JSON.parse(localStorage.getItem('cardOrder'));

    // this.cardOrderId = this.localStorageList.cardOrderId;

    this.getMyRecognizeCard();

    // console.log(111, this.cardOrderId)



  },

  methods: {
    error(msg) {
      console.log('msg:', 'fail');
    },
    formatDate(time) {
      var date = new Date(time);
      return formatDate(date, 'yyyy-MM-dd hh:mm:ss');
    },
    userNow() {
      var self = this;
      if(!self.allow){
        return;
      }
      self.getMyRecognizeCard(function() {
        if (self.orderStatus == 2) {
          self.ma = true;
          $('#qrcode').html("");
          $('#qrcode').qrcode({
            width: 150,
            height: 150,
            text: self.link
          });
        }else{
          return
        }


      })
    },
    mahidde() {
      this.ma = false;
    },
    //获取券详细信息
    getMyRecognizeCard(cb) {
      var self = this;
      $.ajax({
        url: config.locationUrl + "/order/getMyRecognizeCardDetail",
        dataType: "jsonp",
        data: {
          openid: userData.openid,
          cardOrderId: userData.cardOrderId
        },
        success: function(data) {
          console.log(data);
          if (data.ret === "0") {
            self.picUrl = data.order.logoUrl;
            self.title = data.card.merchant.merchantName;
            self.buyBtn = data.card.resourceName;
            self.startDate = self.formatDate(data.order.startDate);
            self.endDate = self.formatDate(data.order.endDate);
            self.description = "<p class='listb'>" + data.card.configBean.description.value.replace(/\n/g, "</p><p>") + "</p>";
            self.orderStatus = data.order.orderStatus;
            if (self.orderStatus == 2) {
              self.allow = true;
              self.masseg = "立即使用"
            }
            if (self.orderStatus == 3) {
              self.allow = false;
              self.masseg = "已使用";
              console.log(111111111);
              cb && self.tipsShow('已使用');
              // if (cb) {
              //   console.log(2222222222222);
              //   self.tipsShow('已经使用');
              // }
            }
            if (self.orderStatus == 4) {
              self.allow = false;
              self.masseg = "订单失败";
              cb && self.tipsShow('订单失败');
              // if (cb) {
              //   self.tipsShow('退款中');
              // }
            }
            if (self.orderStatus == 5) {
              self.allow = false;
              self.masseg = "订单已取消";
              cb && self.tipsShow('订单已取消');
              // if (cb) {
              //   self.tipsShow('退款中');
              // }
            }
            if (self.orderStatus == 6) {
              self.allow = false;
              self.masseg = "退款中";
              cb && self.tipsShow('退款中');
              // if (cb) {
              //   self.tipsShow('退款中');
              // }
            }
            if (self.orderStatus == 7) {
              self.allow = false;
              self.masseg = "已退款";
              cb && self.tipsShow('已退款');
              // if (cb) {
              //   self.tipsShow('已退款');
              // }
            }
            if (self.orderStatus == 8) {
              self.allow = false;
              self.masseg = "已过期";
              // cb && self.tipsShow('已过期');
              if (cb) {
                self.tipsShow('已过期');
              }
            }
            if (self.orderStatus == 9) {
              self.allow = false;
              self.masseg = "未到使用时间";
              cb && self.tipsShow('未到使用时间');
              // if (cb) {
              //   self.tipsShow('未到使用时间');
              // }
            }
            self.link = self.erweima + '/index.html?&userId=' + userData.openid + "&cardOrderId=" + userData.cardOrderId + '#/verificationcode';
            console.log(self.link);
            cb && cb();

          } else {
            //处理接口调用失败
            self.error('getMyRecognizeCardDetail');
          }
        },
        error(res) {
          self.error('getMyRecognizeCardDetail');
        }
      });

    },
    tipsShow(meg) {
      var self = this;
      this.tips = true;
      this.masseg = meg;
      console.log(2222222222222);
      setTimeout(() => {
        self.tips = false;
      }, 2000);
    }
  }
}

</script>
<style lang="scss" scoped>
@import '../../assets/scss/_mixins.scss';
.content {
  width: 100%;
  min-height: 100%;
  background: #f52b3a;
  padding: pTR(80) pTR(20);
  .main {
    width: 100%;
    background: #fff;
    position: relative;
    padding: pTR(66) pTR(28) pTR(100);
    text-align: center;
    .personPic {
      position: absolute;
      width: pTR(100);
      height: pTR(100);
      display: block;
      left: 50%;
      transform: translateX(-50%);
      top: pTR(-50);
      border-radius: 50%;
    }
    .logo {
      font-size: pTR(28);
      color: #666;
    }
    .title {
      padding: pTR(40) 0 pTR(60);
    }
    .buyBtn {
      width: pTR(320);
      height: pTR(70);
      line-height: pTR(70);
      background: #f52b3a;
      color: #fff;
      font-size: pTR(30);
      border-radius: pTR(5);
      margin: 0 auto pTR(85);
    }
    .nouse {
      background: #929292;
    }
    .logoPic {
      width: 100%;
      height: pTR(236);
      background: url(../../assets/czlImg/activePic.png) 0 0 no-repeat;
      background-size: 100%;
      margin-bottom: pTR(10);
    }

    .tips {
      text-align: left;
      padding-top: pTR(33);
      h2 {
        font-size: pTR(28);
        color: #333;
        line-height: pTR(30);
      }
      p {
        padding-top: pTR(10);
        color: #999999;
        font-size: pTR(28);
        line-height: pTR(30);
        word-break: break-all;
      }
      div {
        padding-top: pTR(10);
        color: #999999;
        font-size: pTR(28);
        line-height: pTR(30);
        word-break: break-all;
      }
    }
  }
}

.listb {
  padding-bottom: pTR(20);
}

.popBox {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  .ma {
    width: pTR(560);
    height: pTR(480);
    position: absolute;
    background: #fff;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    border-radius: pTR(10);
    padding: 0 pTR(22);
    .maimg {
      width: 150px;
      height: 150px;
      display: block;
      margin: pTR(60) auto 0;
      canvas {
        width: 100%;
        height: 100%;
      }
    }
    .matext {
      text-align: center;
      padding-top: pTR(20);
    }
    .mabtn {
      position: absolute;
      width: pTR(50);
      height: pTR(50);
      background: url(../../assets/czlImg/closeBtn.png) center center no-repeat;
      background-size: pTR(16) pTR(16);
      right: 0;
      top: 0;
    }
  }
}

.masuccess {
  position: fixed;
  width: pTR(350);
  height: pTR(80);
  background: rgba(0, 0, 0, 0.8);
  left: 50%;
  top: 30%;
  transform: translateX(-50%);
  font-size: pTR(30);
  text-align: center;
  line-height: pTR(80);
  color: #fff;
}

</style>
