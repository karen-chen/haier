<template>
  <div class="submit">
    <div class="top"></div>
    <div class="popBox">
      <div class="title">
        请填写你的信息
      </div>
      <div class="main">
        <ul class="list">
          <li v-for="item in list">
            <div v-show="item.value">
              <div class="area1">
                <div class="arealist" v-for="(area, index) in item.area">
                  <span>{{area.label}}: </span>
                  <select v-model="area.input" :placeholder="'请填写您的' + area.label" @change="areaChange(index, item.area)">
                    <option disabled value="">请选择</option>}
                    <template v-for="(obj, i) in area.items">
                      <option :value="obj">{{obj.text}}</option>
                    </template>
                  </select>
                </div>
              </div>
              <div class="item">
                <span>{{item.label}}: </span>
                <input v-model="item.input" :placeholder="'请填写您的' + item.label">
              </div>
            </div>
          </li>
        </ul>
        <div class="submitBtn" @click="showsuccesspage">
          提交并支付
        </div>
      </div>
    </div>
    <div class="pop_tips" v-show="showTips">信息没有填写完整</div>
    <div class="popBox" v-show="endActive">
      <div class="textline">
        认筹购买活动已经结束
      </div>
    </div>
  </div>
</template>
<script src="//wximg.gtimg.com/shake_tv/include/js/lib/jquery.2.1.1.min.js"></script>
<script src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
<script src="//wximg.gtimg.com/shake_tv/include/js/jsapi.js"></script>
<script src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<script>
import * as purl from '@/assets/js/purl'
import * as constants from '@/assets/js/constants'
import * as auth from '@/assets/js/auth'
import * as config from '@/lib/config'
import {
  userData,
  EnumConfigType,
  ShareInfo,
  getJsSign,
  wxconfig
} from '@/lib/tools';
import AreaData from '@/lib/AreaData'

export default {
  data() {
    return {
      money: 0,
      list: [],
      cardNo: '',
      recognizeCardSid: '',
      customDataId: '',
      localStorageList: {},
      showTips: false,
      msg: '',
      endActive:false
    }
  },

  created() {
    var self = this;
    //拒绝分享
    getJsSign(function(sign) {
      wxconfig(sign);
    })
    wx.ready(function() {
      wx.hideAllNonBaseMenuItem();
    });

    //接口传参的数据需要存储在本地缓存
    if (this.$route.params.cardNo) {
      this.localStorageList.money = this.$route.params.money;
      this.localStorageList.cardNo = this.$route.params.cardNo;
      this.localStorageList.recognizeCardSid = this.$route.params.recognizeCardSid;
      localStorage.setItem('getCustomData', JSON.stringify(this.localStorageList))
    }
    this.localStorageList = JSON.parse(localStorage.getItem('getCustomData'));

    // console.log(this.localStorageList);

    this.money = this.localStorageList.money;
    this.cardNo = this.localStorageList.cardNo;
    this.recognizeCardSid = this.localStorageList.recognizeCardSid;

    //判断微信接口是否加载
    if (typeof WeixinJSBridge == "undefined") {
      if (document.addEventListener) {
        document.addEventListener('WeixinJSBridgeReady', this.onBridgeReady, false);
      } else if (document.attachEvent) {
        document.attachEvent('WeixinJSBridgeReady', this.onBridgeReady);
        document.attachEvent('onWeixinJSBridgeReady', this.onBridgeReady);
      }
    } else {
      this.onBridgeReady();
    }


    // recognizeCard/getCustomData

    $.ajax({
      url: config.locationUrl + "/recognizeCard/getCustomData",
      dataType: "jsonp",
      data: {
        cardId: this.cardNo,
        openid: userData.openid
      },
      success: function(data) {
        if (data.ret === "0") {



          // console.log(data);

          data.list = data.list || [];
          data.list.forEach(function(obj, index) {
            if (data.data) {
              obj.input = data.data[obj.name];
              if (obj.name == 'address' && obj.value == 1) {
                var area = [];
                area.push({
                  label: "省",
                  name: "province",
                  value: 1,
                  input: JSON.parse(data.data["province"]),
                  items: AreaData.provs_data
                });
                area.push({
                  label: "市",
                  name: "city",
                  value: 1,
                  input: JSON.parse(data.data["city"]),
                  items: JSON.parse(data.data["city"]) ? AreaData.citys_data[JSON.parse(data.data["province"]).value] : []
                });
                area.push({
                  label: "区",
                  name: "country",
                  value: 1,
                  input: JSON.parse(data.data["country"]),
                  items: JSON.parse(data.data["country"]) ? AreaData.dists_data[JSON.parse(data.data["city"]).value] : []
                });
                obj.area = area;
              }
            }

          });

          self.list = data.list
          // console.log(self.list);

        } else {
          //处理接口调用失败
          self.error('getCustomData');
        }
      },

      error(res) {
        self.error('getCustomData');
      }

    });


  },

  methods: {


    //报错提示
    error(msg) {
      console.log('msg:', 'fail');
    },


    //点击提交并支付按钮事件
    showsuccesspage(item) {


      //提交用户保存数据
      var result = {};
      var self = this;
      this.list.forEach(item => {
        if (item.value == "1") {
          if (item.input && item.input.length > 0) {
            result[item.name] = item.input;
            if (item.name == 'address') {
              if (item.area) {
                item.area.forEach((obj, index) => {
                  if (obj.input) {
                    result[obj.name] = JSON.stringify(obj.input) || "";
                  } else {
                    console.log(item.label + 'bu neng wei kong!');
                    if (self.showTips == false) {
                      self.showTips = true;
                      setTimeout(() => {
                        self.showTips = false;
                      }, 1000)
                    }

                    throw ''
                  }
                })
              }
            }
          } else {
            console.log(item.label + 'bu neng wei kong!');
            if (self.showTips == false) {
              self.showTips = true;
              setTimeout(() => {
                self.showTips = false;
              }, 1000)
            }

            throw ''
          }
        }

      })

      result.openid = userData.openid;
      result.actSid = userData.actSid;
      // console.log(333, result);

      //请求接口,保存用户填写信息
      $.ajax({
        url: config.locationUrl + "/recognizeCard/saveCustomData",
        dataType: "jsonp",
        type: "post",
        data: result,
        success: function(data) {
          // console.log(data);
          if (data.ret === "0") {
            //self.intention = data.data.sid";
            self.customDataId = data.data.sid;
          }
          if (data.ret == '-88'){
              self.endActive=true;
            }

          else {
            //处理接口调用失败
            self.error('getCustomData');
          }
        },
        error(res) {
          self.error('getCustomData');
        }
      });
      //判断金额是否为0,如果为0的话,直接跳转到支付成功页面,如果不为零,则调用wx支付接口
      if (this.money === 0) {
        this.$router.push({
          name: 'Buysuccess',
          params: {
            cardNo: this.cardNo
          }
        })
      } else {
        this.wx_pay();
      }

    },

    areaChange(index, areaList) {
      //找到address的索引，更新用
      let addressIndex = 0;
      this.list.forEach(function(item, i) {
        if (item.name == "address") {
          addressIndex = i;
        }
      });

      switch (index) {
        case 0:
          {
            this.$set(this.list[addressIndex].area[index + 1], "items", AreaData.citys_data[areaList[index].input.value])
            this.$set(this.list[addressIndex].area[index + 2], "items", [])
            break;
          }
        case 1:
          {
            if (areaList[index].input) {
              this.$set(this.list[addressIndex].area[index + 1], "items", AreaData.dists_data[areaList[index].input.value])
            }
          }
      }
    },


    //请求接口,获取微信支付签名

    wx_pay() {
      var self = this;
      $.ajax({
        url: config.locationUrl + "/wx_pay/pay_sign",
        dataType: "jsonp",
        type: "post",
        data: {
          openid: userData.openid,
          money: this.money,
          cardNo: this.cardNo,
          recognizeCardSid: this.recognizeCardSid,
          customDataId: this.customDataId,
          actId: userData.actSid,
          saleOpenid: userData.saleOpenid,
        },
        success: function(data) {
          console.log(data);
          if (data.ret === "0") {
            // self.sign = data.sign;
            self.invokePayDlg(data);
          } else {
            //处理接口调用失败
            self.error('getCustomData');
          }
        },
        error(res) {
          self.error('getCustomData');
        }
      });
    },

    invokePayDlg(ret) {
      var self = this;
      console.log(ret.sign);
      WeixinJSBridge.invoke(
        'getBrandWCPayRequest',
        ret.sign,
        function(res) {

          // alert(JSON.stringify(res));
          // $("#log_info").append("<p>支付结果："+res.err_msg+"</p>");
          // 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。
          if (res.err_msg == "get_brand_wcpay_request:ok") {
            self.$router.push({
              name: 'Buysuccess'
            })
            //CT：实际是否成交以后台接口为准
            // $("#out_trade_no").val(now_time);
          } else {
            //其他情况：get_brand_wcpay_request:cancel或者get_brand_wcpay_request:fail，后者在配置错误时也会出现，日
          }
        }
      );
    },

    onBridgeReady() {
      console.log("组件加载完毕");
    }





  }
}

</script>
<style lang="scss" scoped>
@import '../../assets/scss/_mixins.scss';

.pop_tips {
  background-color: rgba(0, 0, 0, .6);
  min-width: pTR(400);
  padding: pTR(20) 0;
  text-align: center;
  color: #fff;
  font-size: pTR(30);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.submit {
  width: 100%;
  min-height: 100%;
  position: relative;

  .top {
    width: 100%;
    height: pTR(455);
    background: #f52b3a;
  }
  .popBox {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    padding: 0 pTR(32);
    .title {
      height: pTR(152);
      line-height: pTR(152);
      color: #fff;
      font-size: pTR(36);
      text-align: center;
    }
    .main {
      width: 100%;
      height: 100%;
      background: #fff;
      border-radius: pTR(10);
      padding: 0 pRT(60);
      .list {
        padding: pTR(50) pTR(60);
        width: 100%;
        .item {
          height: pTR(100);
          display: flex;
          align-items: center;
          border-bottom: pTR(2) solid #e5e5e5;
          padding-top: pTR(50);
          span {
            width: pTR(150);
            height: pTR(50);
            line-height: pTR(50);
            color: #333333;
            font-size: pTR(30);
            text-align: justify;
          }
          input {
            box-flex: 1;
            flex: 1;
            height: pTR(50);
            line-height: pTR(50);
            background: transparent;
            padding-left: pTR(30);
            font-size: pTR(30);
          }
        }
      }
      .submitBtn {
        width: pTR(562);
        height: pTR(77);
        line-height: pTR(77);
        background: #f52b3a;
        border-radius: pTR(10);
        margin: pTR(200) auto 0;
        font-size: pTR(36);
        color: #fff;
        text-align: center;
      }
    }
    .textline{
    font-size: pTR(35);
    color: #000;
    text-align: center;
    padding-top: pTR(400);
    background: #fff;
    }

  }
}


.area1 {
  display: flex;
  align-items: center;
  .arealist {
    box-flex: 1;
    flex: 1;
    padding: pTR(50) 0 pTR(10);
    border-bottom: pTR(2) solid #e5e5e5;
    font-size: pTR(30);
  }
  select {
    width: pTR(130);
    border: pTR(2) solid #e5e5e5;
    height: pTR(50);
    line-height: pTR(50);
    font-size: pTR(30);
  }
}


</style>
