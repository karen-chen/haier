<template>
  <div class="content">
    <div class="main">
      <img class="personPic" :src="imageServerUrl + picUrl">
      <p class="logo">{{logo}}</p>
      <h2 class="title">{{title}}</h2>
      <div class="buyBtn" @click="showmessRoute(obj)">
        {{buyBtn}}元购买
      </div>
      <div class="logoPic"></div>
      <div class="tips">
        <h2>有效日期</h2>
        <p>{{startDate}}至 {{endDate}}</p>
      </div>
      <div class="tips">
        <h2>使用说明</h2>
        <p>{{description}}</p>
      </div>
    </div>
  </div>
</template>
<script src="//wximg.gtimg.com/shake_tv/include/js/lib/jquery.2.1.1.min.js"></script>
<script src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
<script src="//wximg.gtimg.com/shake_tv/include/js/jsapi.js"></script>
<script src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<script>
import * as purl from '@/assets/js/purl'
import * as constants from '@/assets/js/constants'
import * as auth from '@/assets/js/auth'
import * as config from '@/lib/config'
import {
  userData,
  EnumConfigType,
  ShareInfo
} from '@/lib/tools';


export default {
  data() {
    return {
      imageServerUrl: config.imageServerUrl,
      money: 0,
      picUrl: '',
      logo: '',
      title: '',
      buyBtn: '',
      startDate: '',
      endDate: '',
      description: '',
      canCustomerInfo: '',
      recognizeCardSid: '',
      cardNo: '',
      sign: {}
    }
  },

  created() {
    if (typeof WeixinJSBridge === "undefined") {
      if (document.addEventListener) {
        document.addEventListener('WeixinJSBridgeReady', this.onBridgeReady, false);
      } else if (document.attachEvent) {
        document.attachEvent('WeixinJSBridgeReady', this.onBridgeReady);
        document.attachEvent('onWeixinJSBridgeReady', this.onBridgeReady);
      }
    } else {
      this.onBridgeReady();
    }

    var self = this;


    //存储接口传参所需数据
    if (this.$route.params.sid) {
      localStorage.setItem('key', this.$route.params.sid)
    }
    this.recognizeCardSid = localStorage.getItem('key')
    console.log(this.recognizeCardSid);

    //activity/getRecognizeCardList
    // console.log(this.$route.params.sid);
    $.ajax({
      url: config.locationUrl + "/activity/getRecognizeCardDetial",
      dataType: "jsonp",
      data: {
        recognizeCardSid: this.recognizeCardSid,
        openid: userData.openid
      },
      success: function(data) {
        console.log(data);
        //如果没有内容 直接跳空页面
        if (data.ret === "0") {
          if (data.list == '[]') {
            this.$router.push({
              name: 'Null'
            })
          }
          self.obj = data.obj;
          self.money = parseInt(data.obj.card.configBean.price.value * 100);
          self.picUrl = data.obj.card.merchant.merchantLogo;
          self.logo = data.obj.card.merchant.merchantName;
          self.title = data.obj.card.resourceName;
          self.buyBtn = data.obj.card.configBean.price.value;
          self.startDate = data.obj.card.configBean.startDate.value;
          self.endDate = data.obj.card.configBean.endDate.value;
          self.description = data.obj.card.configBean.description.value;
          self.canCustomerInfo = data.obj.card.configBean.canCustomerInfo.value;
          self.cardNo = data.obj.card.sid;
          console.log(self.money);
        } else {
          //处理接口调用失败
          self.error('getRecognizeCardList');
        }
      },
      error(res) {
        self.error('getRecognizeCardList');
      }
    });


  },
  methods: {
    error(msg) {
      console.log('msg:', 'fail');
    },

    showmessRoute(item) {
      console.log(this.canCustomerInfo);
      console.log(this.money)

      if (this.canCustomerInfo === '0' && this.money === 0) {
        //如果不需要填客户信息,并且金额为0,直接跳转success
        this.wx_pay();
        this.$router.push({
          name: 'Buysuccess'
        })
      }
      if (this.canCustomerInfo === '0' && this.money !== 0) {
        //如果不需要填客户信息,并且金额不为0,如果金额不为零,直接调接口
        this.wx_pay();

      }
      if (this.canCustomerInfo === '1') {
        this.$router.push({
          name: 'Submit',
          params: {
            money: this.money,
            cardNo: this.cardNo,
            recognizeCardSid: this.recognizeCardSid

          }
        })
      }
    },


    //请求接口,获取微信支付签名

    wx_pay() {
      var self = this;
      $.ajax({
        url: config.locationUrl + "/wx_pay/pay_sign",
        dataType: "jsonp",
        type: "post",
        data: {
          openid: userData.openid,
          money: this.money,
          cardNo: this.cardNo,
          recognizeCardSid: this.recognizeCardSid,
          actId: userData.actSid
        },
        success: function(data) {


          // console.log(data);
          if (data.ret === "0") {
            if(self.money == 0){
              return
            }else{
              self.invokePayDlg(data);
            }
            // self.sign = data.sign;
          
          } else {
            //处理接口调用失败
            self.error('getCustomData');
          }
        },
        error(res) {
          self.error('getCustomData');
        }
      });
    },
    invokePayDlg(ret) {
      var self=this;
      WeixinJSBridge.invoke(
        'getBrandWCPayRequest',
        ret.sign,
        function(res) {
          //alert(res.err_msg);
          // $("#log_info").append("<p>支付结果："+res.err_msg+"</p>");
          // 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。
          if (res.err_msg == "get_brand_wcpay_request:ok") {
            //CT：实际是否成交以后台接口为准
            // $("#out_trade_no").val(now_time);
            self.$router.push({
              name: 'Buysuccess'
            })
          } else {
            //其他情况：get_brand_wcpay_request:cancel或者get_brand_wcpay_request:fail，后者在配置错误时也会出现，日
          }
        }
      );
    },

    onBridgeReady() {
      console.log("组件加载完毕");
    }


  }
}

</script>
<style lang="scss" scoped>
@import '../../assets/scss/_mixins.scss';
.content {
  width: 100%;
  min-height: 100%;
  background: #f52b3a;
  padding: pTR(80) pTR(20);
  .main {
    width: 100%;
    background: #fff;
    position: relative;
    padding: pTR(66) pTR(28) pTR(100);
    text-align: center;
    .personPic {
      position: absolute;
      width: pTR(100);
      height: pTR(100);
      display: block;
      left: 50%;
      transform: translateX(-50%);
      top: pTR(-50);
    }
    .logo {
      font-size: pTR(28);
      color: #666;
    }
    .title {
      padding: pTR(40) 0 pTR(60);
    }
    .buyBtn {
      width: pTR(320);
      height: pTR(70);
      line-height: pTR(70);
      background: #f52b3a;
      color: #fff;
      font-size: pTR(30);
      border-radius: pTR(5);
      margin: 0 auto pTR(85);
    }
    .logoPic {
      width: 100%;
      height: pTR(236);
      background: url(../../assets/czlImg/activePic.png) 0 0 no-repeat;
      background-size: 100%;
      margin-bottom: pTR(10);
    }

    .tips {
      text-align: left;
      padding-top: pTR(33);
      h2 {
        font-size: pTR(28);
        color: #333;
        line-height: pTR(30);
      }
      p {
        padding-top: pTR(10);
        color: #999999;
        font-size: pTR(28);
        line-height: pTR(30);
      }
    }
  }
}

</style>
