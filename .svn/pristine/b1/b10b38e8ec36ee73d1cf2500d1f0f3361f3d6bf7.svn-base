<template>
  <div class="seach_body list_body">

    <!--定位搜索框-->
    <div class="el-row row_p17">
      <div class="el-col el-col-2">
        <div class="pic_icon" @click="chooseAddress">
          <img src="../../assets/images/icon_address.png">
        </div>
      </div>
      <div class="text-center el-col el-col-4">
        <p class="p" @click="chooseAddress">{{cityName}}</p>
      </div>
      <div class="el-col el-col-18 inputbox">
        <input placeholder="搜索" class="el-input" v-model="seachValue">
        <button class="seach_btn" @click="seachBtn">搜索</button>
        <button class="del_btn" @click="delBtn">&times;</button>
      </div>
    </div>
    <div class="find">
      <!--banner-->
      <div class="row_p0 el-row">
        <div class="el-col">
          <img :src="imageServerUrl+imgUrl">
        </div>
      </div>
      <!-- 搜索到门店-->
      <div class="list_seach el-row">
        <ul>
          <li v-for="(item,index) in rows" @click="listShop(index)">
            <div class="el-row">
              <div class="el-col el-col-3">
                <div class="logo_shop">
                  <img :src="imageServerUrl+item.merchantLogo">
                </div>
              </div>
              <div class="p10 el-col el-col-19">
                <h3>{{item.name}}</h3>
                <h4>距离8km</h4>
              </div>
              <div class="text-right el-col el-col-2" @click="navigationBtn(item)">
                <i class="seach_icon"></i>
              </div>
            </div>
            <div class="el-row p0">
              <div class="el-col el-col-2">
                <div class="pic_icon">
                  <img src="../../assets/images/icon_hui.jpg">
                </div>
              </div>
              <div class="el-col el-col-22">
                <p>{{item.discountInfo}}</p>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <!--没有搜索到门店-->
    <!--没有结果-->
    <div class="not_find" v-show="showSeach">
      <span></span>
      <p>被你难倒了，暂时没找到结果</p>
    </div>
    <div class="pop_mask" v-show="showAddress">
      <div class="select_box">
        <div class="choose">
          <ul>
            <li>
              <span>省</span>
              <select v-model="result.province" @change="areaChange('province')">
                <option disabled value="">省</option>
                <!-- v-for="(obj, i) in area.items" -->
                <template v-for="obj in province">
                  <option :value="JSON.stringify(obj)">{{obj.text}}</option>
                </template>
              </select>
            </li>
            <li>
              <span>市</span>
              <select v-model="result.city" @change="areaChange('city')">
                <option disabled value="">市</option>}
                <template v-for="obj in city ">
                  <option :value="JSON.stringify(obj)">{{obj.text}}</option>
                </template>
              </select>
            </li>
          </ul>
        </div>
        <div class="check_btn" @click="cityBtn">确定</div>
      </div>
    </div>
    <div class="failure_body" v-show="showFailure">
      <div class="top text-center">
        <span></span>
        <p>定位失败</p>
      </div>
      <div class="btn">
        <button type="button" class="choose_locate" @click="chooseBtn">手动选择</button>
      </div>
    </div>
  </div>

</template>
<style lang="scss">
@import '../../assets/scss/_mixins.scss';
@import '../../assets/scss/pages/_index.scss';
@import '../../assets/scss/pages/_seach.scss';
@import '../../assets/scss/pages/_failure.scss';
.area_roll>div:last-child {
  display: none;
}

</style>
<script>
/*import swiper from 'swiper'*/
import AreaData from '@/lib/AreaData'
import * as config from '@/lib/config'
import '@/assets/js/dropload.min'
import {
  wxconfig,
  getJsSign,
  wxlocationFn,
  userData,
  TMap
} from '@/lib/tools';


export default {
  data() {
    return {
      choose_index:-1,
      show: false,
      seachValue: '',
      showSeach: false,
      showAddress:false,
      showFailure:false,
      pageIndex: 0,
      pageSize: 3,
      rows: [],
      imageServerUrl: config.imageServerUrl,
      imgUrl: '',
      rowsIndex:0,
      result: {},
      province: [],
      city: [],
      cityName:'',
      choosecity:''
    }
  },

  components: {
    vueArea
  },

  created() {
    getJsSign(function(sign) {
      var _this = this
      wxconfig(sign);
      wx.getLocation({
        type: 'wgs84', // 默认为wgs84的gps坐标，如果要返回直接给openLocation用的火星坐标，可传入'gcj02'
        success: function(res) {
          var latitude = res.latitude; // 纬度，浮点数，范围为90 ~ -90
          var longitude = res.longitude; // 经度，浮点数，范围为180 ~ -180。
          var speed = res.speed; // 速度，以米/每秒计
          var accuracy = res.accuracy; // 位置精度

          //通过经纬度获取城市
            //调用城市服务信息
          var citylocation = null;
          TMap('BYFBZ-MHWRP-BMYDJ-LRPOB-XNUY3-HNBXH').then(qq => {
            citylocation = new qq.maps.CityService({
            complete: function(results) {
              // console.log(JSON.stringify(results));
              var detail = results.detail.detail.split(",");
              _this.choosecity = detail[1];
            }
          });
          //根据经纬度获取当前城市
          var latLng = new qq.maps.LatLng(longitude, latitude);
          // var latLng = new qq.maps.LatLng(29.03158, 111.69854);
          citylocation.searchCityByLatLng(latLng);
        })
          //通过城市掉接口得到列表数据
          _this.getShoplist();
          _this.getCityBannerList()


        },
        fail: function() {
          //console.log(dingweishibai )
          _this.showFailure = true
        }
      });
    });
    var _this = this;
    /*     alert(this.cityname)*/
    this.province = AreaData.provs_data;
    if (_this.choosecity) {
      localStorage.setItem('city', _this.choosecity)
    }
    _this.shopId = localStorage.getItem('city')
  },
  mounted:function(){
    var self=this;
    $(window).scroll(function(){

      // console.log('正在滑动');
      var scrollTop = $(this).scrollTop();    //滚动条距离顶部的高度
      var scrollHeight = $(document).height();   //当前页面的总高度
      var clientHeight = $(this).height();    //当前可视的页面高度
      if(scrollTop + clientHeight >= scrollHeight){
        // console.log('滑动到底部');
        if(self.rowsIndex == 0){
          return
        }
        self.getShoplist();
      }
    })

  },
  methods: {

    chooseBtn(){
      this.showFailure = false
      this.showAddress = true
    },
    areaChange(type) {
      switch (type) {
        case 'province':
        {
          let province = JSON.parse(this.result.province).value
          this.city = AreaData.citys_data[province]
          break;
        }
        case 'city':
        {
          if (this.result.city) {
            let city = JSON.parse(this.result.city).value
            this.country = AreaData.dists_data[city]
          }
          break;
        }
      }
    },
    chooseAddress(){
      this.showAddress = true
    },
    cityBtn(){
      this.showAddress = false
      if(this.result.city.length<=3){
        this.cityName = JSON.parse(this.result.province).text
      }
      this.cityName = JSON.parse(this.result.city).text
      this.choosecity = this.cityName
      this.getShoplist()
      this.getCityBannerList()
    },
    getCityBannerList(){
      var _this = this
      $.ajax({
        type: "GET",
        url: config.locationUrl + "/banner/getCityBannerList",
        dataType: "jsonp",
        data: {
          city: this.choosecity
        },
        success: function (data) {
          if (data.ret == 0) {
            _this.imgUrl = data.list[0].imgUrl;
          } else {
            console.log('banner/getCityBannerList:', 'ret != 0');
          }
        },
        error(res) {
          console.log('banner/getCityBannerList:', 'fail');
        }
      });
    },
    getShoplist(){
      var _this = this
      $.ajax({
        type: "GET",
        url: config.locationUrl + "/shop/getShopList",
        dataType: "jsonp",
        data: {
          pageIndex: _this.pageIndex,
          pageSize: _this.pageSize,
          city: _this.choosecity
        },
        success: function (data) {

          if (data.ret == 0) {
            if (data.rows) {
              //console.log(data);
              _this.rowsIndex = data.rows.length;
              _this.pageIndex = data.pageIndex;
              _this.rows = _this.rows.concat(data.rows);
              console.log(_this.rows);
              if (_this.rows.length <= 0) {
                _this.showSeach = true
              }
            } else {
              console.log('已经没有数据')
            }
          } else {
            console.log('shop/getShopList:', 'ret != 0');
          }
        },
        error(res) {
          console.log('shop/getShopList:', 'fail');
        }
      });
    },
    listShop(index) {
      this.choose_index = index;
      // alert(this.rows[this.choose_index].sid)
      if (this.choose_index >= 0) {
        this.$router.push({
          name: 'Activity',
          params: {
            shoplist: this.rows[this.choose_index].sid
          }
        })
      }
    },
    seachBtn() {
      var self = this;
      self.pageIndex = 0
      $.ajax({
        type: "GET",
        url: config.locationUrl + "/shop/getShopList",
        dataType: "jsonp",
        data: {
          pageIndex: this.pageIndex,
          pageSize: this.pageSize,
          city: userData.city,
          searchKey: this.seachValue
        },
        success: function (data) {
          if (data.ret == 0) {
            console.log(data);
            self.pageIndex = data.pageIndex;
            self.rows = [];
            self.rows = data.rows;
            if (self.rows.length <= 0) {
              self.showSeach = true
            }
            console.log(111, this);

          } else {
            console.log('shop/getShopList:', 'ret != 0');
          }
        },
        error(res) {
          console.log('shop/getShopList:', 'fail');
        }
      });
    },
    delBtn() {
      var _this = this;
      _this.seachValue = '';
      _this.getShoplist()
    },
    navigationBtn(item){
      stopPropagation();
      wx.openLocation({
        latitude: item.latitude, // 纬度，浮点数，范围为90 ~ -90
        longitude: item.longitude, // 经度，浮点数，范围为180 ~ -180。
        name: item.name, // 位置名
        address: item.address, // 地址详情说明
        scale: 1, // 地图缩放级别,整形值,范围从1~28。默认为最大
        infoUrl: '' // 在查看位置界面底部显示的超链接,可点击跳转
      });
    }
  }
}

</script>
